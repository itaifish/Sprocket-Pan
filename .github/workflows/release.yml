name: 'tagged-release'

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  tagged-release-linux:
    name: 'Tagged Release Linux'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
      - name: 'Install & Build'
        run: |
          pwd
          ls
          yarn
          yarn run build:executable
      - name: 'Zip Built Bundle'
        run: |
          tar -czvf linux-bundle.tar.gz ./src-tauri/target/release/bundle
      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          files: |
            linux-bundle.tar.gz
  tagged-release-windows:
    name: 'Tagged Release Windows'
    runs-on: 'windows-latest'
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
      - name: 'Install & Build'
        run: |
          yarn
          yarn run build:executable
      - name: 'Zip Built Bundle'
        run: |
          Compress-Archive ./src-tauri/target/release/bundle windows-bundle.zip
      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          files: |
            windows-bundle.zip
  tagged-release-macos:
    name: 'Tagged Release MacOs'
    runs-on: 'macos-latest'
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
      - name: 'Install & Build'
        run: |
          yarn
          yarn run build:executable
      - name: 'Zip Built Bundle'
        run: |
          zip -vr mac-bundle.zip ./src-tauri/target/release/bundle/ -x "*.DS_Store"
      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          files: |
            mac-bundle.zip
